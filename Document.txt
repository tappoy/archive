package archive // import "github.com/tappoy/archive"

This package provides an interface for archiving to cloud services.

Supported protocols:
  - OpenStack https://docs.openstack.org/2024.1/api/
  - AWS https://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html

Tested services:
  - ConoHa https://doc.conoha.jp/api-vps3/
  - Sakura https://manual.sakura.ad.jp/cloud/objectstorage/api/api-json.html

May be supported:
  - CloudFlare https://developers.cloudflare.com/r2/examples/aws/aws-sdk-go/

Others:
  - Google https://cloud.google.com/storage/docs/json_api/v1

VARIABLES

var (
	// ErrUnsupportedProtocol is returned when the protocol is not supported.
	ErrUnsupportedProtocol = errors.New("unsupported protocol")

	// ErrMissingProtocol is returned when the protocol is missing.
	ErrMissingProtocol = errors.New("missing protocol")
)

FUNCTIONS

func NewClientFromConfig(config map[string]string) (types.Client, error)
    NewClientFromConfig creates a new client from a configuration map.

    Errors:
      - ErrMissingProtocol: when the "ARCHIVE_PROTOCOL" key is missing.
      - ErrUnsupportedProtocol: when the protocol is not supported.
      - Any error returned by the client constructor.

func NewClientFromString(src string) (types.Client, error)
    NewClientFromString creates a new client from a configuration string.

    Errors:
      - ParseError: when the configuration string is invalid.
      - ErrUnsupportedProtocol: when the protocol is not supported.
      - ErrMissingProtocol: when the protocol is missing.
      - Any error returned by the client constructor.


TYPES

type ParseError struct {
	// LineNo is the line number where the error occurred.
	LineNo int
	// Line is the line where the error occurred.
	Line string
	// Message is the error message.
	Message string
}
    ParseError is an error type for parsing configuration.

func (e *ParseError) Error() string
    Error returns the error message.

